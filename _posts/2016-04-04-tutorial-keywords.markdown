---
layout: post
title:  "Keywords"
date:   2016-04-04 15:10:20 -0200
categories: tutorial
highlight: true
image: /img/keyword.jpg

---

This tutorial lists important definitions used throughout the Mezuro website. Knowing them is vital for complete understanding of the platform.

### Granularity
Represents the granularity level of the code fragment being measured. Mezuro uses five levels of granularity:

  - Method
  - Function
  - Class
  - Package
  - Software

### Module
Represents a fragment of the software. Every node in the processing tree generated by the Kalibro processor is a module and each module has a _granularity_.

### Range
Represents numerical intervals that may contain the value calculated for a given _metric_. Ranges combined with readings provide interpretations for _metric results_.

### Reading
The interpretation given to a _metric result_ (e.g., "Good", "Complex", "A"). Readings combined with ranges provide interpretations for _metric results_.

### Reading Group
A set of _readings_ that make sense when grouped together (e.g., "Good" and "Bad", "Simple" and "Complex").

### Metric
A software metric is a method for evaluating some interesting property of a software module. It can be:

* Quantitative, generating a numeric measure (e.g, "Number of Lines", "Cyclomatic Complexity", "Number of Public Methods")
* Qualitative, identifying points of interest or issues in particular parts of the code (e.g. "Unused Variable in line 10 of file main.rb", "Duplicated Code in line 20 of file user.b and line 30 of file post.rb") 

For more details see the [publications](/publications/) page.

### Configuration
A set of related _metrics_ that can be used to evaluate a code repository, usually targetting the same programming language or type of issue (e.g., "Ruby Code Quality", "Web Programming Style").

### Metric Result
The products of the analysis of a repository by a given _metric_. Each _metric result_ is associated to a module of the same granularity, belonging to a repository's code.

It can be classified as a _tree metric result_ (generated by a _quantitative metric_) or a _hotspot metric result_ (generated by a _qualitative metric_).
